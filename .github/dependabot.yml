version: 2
updates:
  # Keep npm up to date, but reduce noise with grouping and limits
  - package-ecosystem: "npm"
    directory: "/"
    schedule:
      # Pick a manageable cadence; weekly is a good default at scale
      interval: "weekly"
      day: "tuesday"
      time: "09:00"
      timezone: "America/New_York"
    open-pull-requests-limit: 3  # cap concurrent PRs to avoid overload
    labels: ["dependencies", "dependabot"]
    commit-message:
      prefix: "chore"
      include: "scope"

    # Optional: slow down flood-y ecosystems with a cooldown
    cooldown:
      default-days: 3
      semver-major-days: 14
      semver-minor-days: 5
      semver-patch-days: 2

    # Grouping rules to cut PR volume but keep risk separated
    groups:
      # fast lane: dev-tooling bumps together (minor+patch)
      dev-tools-minor-patch:
        dependency-type: "development"
        update-types: ["minor", "patch"]
        patterns:
          - "eslint"
          - "@eslint/*"
          - "typescript"
          - "vitest"
          - "jest*"
      # runtime deps: minor+patch all together
      runtime-minor-patch:
        dependency-type: "production"
        update-types: ["minor", "patch"]
        patterns: ["*"]
        exclude-patterns:
          - "lodash"    # example: keep this separate if you want extra review
      # majors always isolated
      majors:
        update-types: ["major"]
        patterns: ["*"]

    # Example: ignore *patch* updates for very chatty packages
    ignore:
      - dependency-name: "eslint*"
        update-types: ["version-update:semver-patch"]

  # Keep GitHub Actions up to date on a light cadence
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "monthly"
      time: "09:30"
      timezone: "America/New_York"
    open-pull-requests-limit: 2
